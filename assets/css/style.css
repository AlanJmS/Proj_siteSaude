/* PROPRIEDADES APLICADAS DE FORMA GERAL NO CÓDIGO */

* {
  margin: 0; /* Remove a margem padrão */
  padding: 0; /* Remove o espaçamento padrão */  
  box-sizing: border-box; /*  faz com que o tamanho total de um elemento (largura e altura) inclua o conteúdo, o preenchimento (padding) e a borda (border), evitando que esses valores aumentem o tamanho total do elemento */
}

header {
  position: sticky; /* Faz o cabeçalho fixar no topo ao rolar a página */
  top: 0; /* Posiciona o cabeçalho no topo da página */
  z-index: 1000;  /* Garante que o cabeçalho fique acima de outros elementos */
}

body {
  width: 100%; /* Ajusta o elemento pra ocupar 100% da largura de onde ele está inserido */
  height: 100%; /* Ajusta o elemento pra ocupar 100% da altura de onde ele está inserido */
  font-family: PT Serif; /* Aplica uma fonte no corpo do site */
}

main { 
  padding-top: 20px; /* Adiciona um espaçamento interno de 20 pixels no lado superior do elemento */
  padding-left: 90px; /* Adiciona um espaçamento interno de 90 pixels no lado esquerdo do elemento */
  padding-right: 90px; /* Adiciona um espaçamento interno de 90 pixels no lado direito do elemento */
  padding-bottom: 20px; /* Adiciona um espaçamento interno de 20 pixels no lado inferior do elemento */
}

p {
  text-align: justify; /* Alinha o texto de forma que as linhas se estendam em todo o espaço disponível */
}

ol li {
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  display: flex; /* Torna o layout flexível */
  border-right: 2px solid; /* Adiciona uma borda de 2 pixels no lado direito do elemento */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}

ol li:last-child {
  border-right: none; /*Remove a borda do último elemento da lista */
}

/* FINAL DAS PROPRIEDADES GERAIS */

/*----------------------------------------------------------------------*/

/* CLASSES CRIADAS */

.link {
  text-decoration: none; /*Remove a estilização padrão dos links */
  color: white; /* Muda a cor da fonte para branco */
  font-size: large; /* Muda o tamanho da fonte para grande */
  border-style: solid; /* Adiciona bordas ao redor do elemento */
  border-radius: 25px; /* Arredonda os cantos de um elemento, aplicando um raio de 25 pixels em todas as bordas */
  padding: 15px; /*  Adiciona um espaçamento interno de 15 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}

.link:hover {
  color: chartreuse; /* Transforma a cor da fonte de branco para a cor verde */
}

.container {
  display: flex; /* Torna o layout flexível */
  flex-direction: row-reverse; /* Organiza os itens do container flexível em uma linha invertida, alinhando-os horizontalmente, mas com a ordem dos itens invertida. */
  background-color: black; /* Muda a cor de fundo do elemento para preto */
  border-radius: 20px; /* Arredonda os cantos de um elemento, aplicando um raio de 20 pixels em todas as bordas */
  padding: 10px; /*  Adiciona um espaçamento interno de 15 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}

.video {
  color: white;  /* Muda a cor da fonte para branco */
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  margin: 10px; /* Adiciona um espaço de 10 pixels em um elemento, separando-o do conteúdo */
  padding: 10px; /*  Adiciona um espaçamento interno de 15 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  gap: 20px; /* Define um espaçamento de 20 pixels entre os itens dentro de um elemento */
}

.mini-perfil {
  color: white; /* Muda a cor da fonte para branco */
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  justify-content: space-around; /* Distribui os itens de um container flexível ao longo do eixo principal, deixando espaços iguais ao redor de cada item, com metade do espaço aplicado nas extremidades do container. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  text-align: justify; /* Alinha o texto de forma que as linhas se estendam em todo o espaço disponível */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}

.mini-perfil p {
  display: flex; /* Torna o layout flexível */
  flex-wrap: wrap; /* Permite que os itens de um elemento flexível quebrem para a próxima linha ou coluna, caso não caibam no espaço disponível */
  font-size: 18px; /* Muda o tamanho da fonte para 18 pixels */
}

.sociais {
  display: flex; /* Torna o layout flexível */
  flex-direction: row; /* Organiza os itens do container flexível em uma linha, alinhando-os horizontalmente na ordem padrão. */
  gap: 15px; /* Define um espaçamento de 15 pixels entre os itens dentro de um elemento */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
}

/* FINAL DAS CLASSES UTILIZADAS */

/*----------------------------------------------------------------------*/

/* BARRA DE NAVEGAÇÃO */

#naveg {
  display: flex; /* Torna o layout flexível */
  justify-content: space-around; /* Distribui os itens de um container flexível ao longo do eixo principal, deixando espaços iguais ao redor de cada item, com metade do espaço aplicado nas extremidades do container. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  background-color: rgba(13, 24, 105, 0.89); /* Muda a cor de fundo do elemento para azul escuro */
}

#div-links {
  display: flex; /* Torna o layout flexível */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
} 

#area-pesq {
  display: flex; /* Torna o layout flexível */
  flex-direction: column-reverse; /* Organiza os itens do container flexível em uma coluna invertida, alinhando-os verticalmente, mas com a ordem dos itens invertida.*/
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  justify-items: center; /* Alinha os itens de um container no centro ao longo do eixo principal */
}

#pesquisa {
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  height: 30px; /* Ajusta o elemento pra ocupar 30 pixels da altura de onde ele está inserido */
  border-radius: 30px; /* Arredonda os cantos de um elemento, aplicando um raio de 30 pixels em todas as bordas */
}

#envio {
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  border-radius: 25px; /* Arredonda os cantos de um elemento, aplicando um raio de 25 pixels em todas as bordas */
  border-style: solid; /* Adiciona bordas ao redor do elemento */
  border-color: white; /* Muda a cor da borda para branco */
  color: white; /* Muda a cor da fonte para branco */
  background-color: rgba(13, 24, 105, 0.89); /* Muda a cor de fundo do elemento para azul escuro */
}

#envio:hover {
  color: chartreuse; /* Transforma a cor da fonte de branco para verde */
  border-color: chartreuse; /* Transforma a cor da borda de branco para verde */
}

/* FIM DA ÁREA DE NAVEGAÇÃO */

/*----------------------------------------------------------------------*/

/* SEÇÃO PRINCIPAL */

#inicio {
  display: flex; /* Torna o layout flexível */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  padding-bottom: 10px; /*  Adiciona um espaçamento interno de 10 pixels no lado inferior de um elemento. */
}

#textos-apresent {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
  margin-left: 20px; /* Adiciona um espaço de 20 pixels a esquerda de um elemento, separando-o do conteúdo */
}

#textos-apresent h1 {
  display: flex; /* Torna o layout flexível */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  text-align: center; /* Alinha o texto de forma que as linhas se estendam no centro do elemento */
}

#textos-introd {
  justify-items: center; /* Alinha os itens de um container no centro ao longo do eixo principal */
}

#textos-introd h1,
p {
  margin-bottom: 25px; /* Adiciona um espaço de 25 pixels abaixo de um elemento, separando-o do conteúdo */
}

#praticas {
  display: flex; /* Torna o layout flexível */
  align-items: center; /* Alinha os itens verticalmente ao centro */
}

#alimentacao {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  margin-left: 20px; /* Adiciona um espaço de 20 pixels a esquerda de um elemento, separando-o do conteúdo */
}

#alimentacao ul li {
  text-align: justify; /* Alinha o texto de forma que as linhas se estendam em todo o espaço disponível */
  padding: 5px; /*  Adiciona um espaçamento interno de 5 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  margin-right: 20px; /* Adiciona um espaço de 20 pixels a direita de um elemento, separando-o do conteúdo */
}

#habitos {
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
  display: flex; /* Torna o layout flexível */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  margin-top: 20px; /* Adiciona um espaço de 20 pixels acima de um elemento, separando-o do conteúdo */
} 

#textos_habitos {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  padding-bottom: 20px; /*  Adiciona um espaçamento interno de 20 pixels no lado inferior de um elemento. */
}

#textos_habitos ul li {
  text-align: justify; /* Alinha o texto de forma que as linhas se estendam em todo o espaço disponível */
  padding: 5px; /*  Adiciona um espaçamento interno de 5 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  margin-left: 20px; /* Adiciona um espaço de 20 pixels a esquerda de um elemento, separando-o do conteúdo */
}

/* FINAL DA SEÇÃO PRINCIPAL */

/*----------------------------------------------------------------------*/

/* SEÇÃO SOBRE SAÚDE MENTAL */

#saudeMental {
  display: flex; /* Torna o layout flexível */
  margin-top: 40px; /* Adiciona um espaço de 40 pixels acima de um elemento, separando-o do conteúdo */
  justify-content: space-between; /* Distribui os itens de um container flexível ao longo do eixo principal, posicionando o primeiro e o último item nas extremidades e deixando espaço igual entre os itens intermediários. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
}

#textos_mental1 {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  gap: 20px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
  margin-right: 30px; /* Adiciona um espaço de 30 pixels a direita de um elemento, separando-o do conteúdo */
  padding-top: 20px; /*  Adiciona um espaçamento interno de 20 pixels no lado superior de um elemento. */
}

#textos_mental2 {
  display: flex; /* Torna o layout flexível */
  margin-top: 20px; /* Adiciona um espaço de 20 pixels acima de um elemento, separando-o do conteúdo */
}

/* FINAL DA SEÇÃO SOBRE SAÚDE MENTAL */

/*----------------------------------------------------------------------*/

/* SEÇÃO SOBRE MITOS E VERDADES */

#mitos {
  display: flex; /* Torna o layout flexível */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  padding-top: 30px; /*  Adiciona um espaçamento interno de 30 pixels no lado superior de um elemento. */
  padding-bottom: 20px; /*  Adiciona um espaçamento interno de 20 pixels no lado inferior de um elemento. */
  margin-top: 20px; /* Adiciona um espaço de 20 pixels acima de um elemento, separando-o do conteúdo */
}

#intro_mitos {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  margin-right: 10px; /* Adiciona um espaço de 10 pixels a direita de um elemento, separando-o do conteúdo */
  gap: 20px; /* Define um espaçamento de 20 pixels entre os itens dentro de um elemento */
}

#mitos_perguntas {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
}

#mitos_perguntas h2 {
  display: flex; /* Torna o layout flexível */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  color: rgb(255, 0, 0); /* Muda a cor da fonte pra vermelho */
  border-style: solid; /* Adiciona bordas ao redor do elemento */
  border-color: black; /* Muda a cor da borda para preto */
  border-radius: 20px; /* Arredonda os cantos de um elemento, aplicando um raio de 20 pixels em todas as bordas */
  background-color: black; /* Muda a cor de fundo do elemento para preto */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}

#mitos_respostas {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  align-items: start; /* Alinha os itens verticalmente no começo do eixo horizontal */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  margin-top: 10px; /* Adiciona um espaço de 10 pixels acima de um elemento, separando-o do conteúdo */
  color: rgb(176, 8, 8); /* Muda a cor da fonte para vermelho */
  font-weight: bold; /* Formata o texto em negrito */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
  padding-bottom: 15px; /*  Adiciona um espaçamento interno de 15 pixels no lado inferior de um elemento. */
}

#mitos_perguntas ol {
  display: flex; /* Torna o layout flexível */
  flex-direction: row; /* Organiza os itens do container flexível em uma linha, alinhando-os horizontalmente na ordem padrão. */
  font-weight: bolder; /* Define a espessura da fonte como maior do que o do elemento principal */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  list-style-type: none; /* Remove a estilização da lista */
  border-style: solid; /* Adiciona bordas ao redor do elemento */
}

#verdades {
  display: flex; /* Torna o layout flexível */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  margin-top: 10px; /* Adiciona um espaço de 10 pixels acima de um elemento, separando-o do conteúdo */
}

#verdades_perguntas {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
}

#verdades_perguntas h2 {
  display: flex; /* Torna o layout flexível */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  color: rgb(2, 237, 2); /* Muda a cor da fonte para verde */
  border-style: solid; /* Adiciona bordas ao redor do elemento */
  border-color: black; /* Muda a cor da borda para preto */
  border-radius: 20px; /* Arredonda os cantos de um elemento, aplicando um raio de 20 pixels em todas as bordas */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  background-color: black; /* Muda a cor de fundo do elemento para preto */
}

#verdades_perguntas ol {
  display: flex; /* Torna o layout flexível */
  flex-direction: row; /* Organiza os itens do container flexível em uma linha, alinhando-os horizontalmente na ordem padrão. */
  font-weight: bolder; /* Define a espessura da fonte como maior do que o do elemento principal */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  list-style-type: none; /* Remove a estilização da lista */
  border-style: solid; /* Adiciona bordas ao redor do elemento */
}

#verdades_respostas {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  align-items: start; /* Alinha os itens verticalmente no começo do eixo horizontal */
  justify-content: center; /* Alinha os itens de um container flexível no centro do eixo principal, seja ele horizontal ou vertical */
  margin-top: 10px; /* Adiciona um espaço de 10 pixels acima de um elemento, separando-o do conteúdo */
  margin-bottom: 20px; /* Adiciona um espaço de 10 pixels abaixo de um elemento, separando-o do conteúdo */
  color: rgb(1, 84, 1); /* Muda a cor da fonte para verde */
  font-weight: bold; /* Formata o texto em negrito */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
}

/* FINAL DA SEÇÃO SOBRE MITOS E VERDADES */

/*----------------------------------------------------------------------*/

/* SEÇÃO COM A ÁREA DE CONTATO DO SITE */

#contato {
  padding: 35px; /*  Adiciona um espaçamento interno de 35 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}
#contato h2 {
  text-align: justify; /* Alinha o texto de forma que as linhas se estendam em todo o espaço disponível */
  padding-bottom: 10px; /*  Adiciona um espaçamento interno de 10 pixels no lado inferior de um elemento. */
}
#contato form {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  gap: 15px; /* Define um espaçamento de 15 pixels entre os itens dentro de um elemento */
  border-style: solid; /* Adiciona bordas ao redor do elemento */
  box-shadow: black 10px 16px 30px;
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}

#contato form input,
#contato form select,
#contato form textarea,
#contato form button {
  border-width: 2px; /* Altera a largura da borda para 2 pixels */
  border-color: black; /* Muda a cor da borda para preto */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
}

#contato form label {
  font-weight: bolder; /* Define a espessura da fonte como maior do que o do elemento principal */
}

#contato form button {
  color: white; /* Muda a cor da fonte para branco */
  background-color: black; /* Muda a cor de fundo do elemento para preto */
}

#contato form button:hover {
  color: black; /* Transforma a cor da fonte para preto */
  background-color: white; /* Transforma a cor de fundo do elemento para branco */
}

/* FINAL DA SEÇÃO DE CONTATO DO SITE */

/*----------------------------------------------------------------------*/

/* RODAPÉ DO SITE */

#redes_foot {
  display: flex; /* Torna o layout flexível */
  justify-content: space-between; /* Distribui os itens de um container flexível ao longo do eixo principal, posicionando o primeiro e o último item nas extremidades e deixando espaço igual entre os itens intermediários. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
}

#redes_foot a {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
}

footer {
  display: flex; /* Torna o layout flexível */
  flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  color: white; /* Muda a cor da fonte para branco */
  padding: 10px; /*  Adiciona um espaçamento interno de 10 pixels em todos os lados (superior, inferior, esquerdo e direito) de um elemento. */
  gap: 20px; /* Define um espaçamento de 20 pixels entre os itens dentro de um elemento */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  background-color: rgb(0, 11, 88); /* Muda a cor de fundo do elemento para azul escuro */
}

footer ul {
  list-style: none; /* Remove a estilização da lista */
  display: flex; /* Torna o layout flexível */
  align-items: center; /* Alinha os itens verticalmente ao centro */
  gap: 10px; /* Define um espaçamento de 10 pixels entre os itens dentro de um elemento */
}

footer a {
  text-decoration: none;
  color: white; /* Muda a cor da fonte para branco */
}

footer a:hover {
  color: black; /* Transforma a cor da fonte para preto */
}

@media screen and (min-width: 1px) and (max-width: 480px) { /* Ajusta o conteúdo do site até a resolução de 480px */
  body {
    display: flex; /* Torna o layout flexível */
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
    flex-wrap: wrap; /* Permite que os itens de um elemento flexível quebrem para a próxima linha ou coluna, caso não caibam no espaço disponível */
    font-size: xx-large; /* Muda o tamanho da fonte para extra grande */
  }

  body img {
    min-width: 100%; /* Ajusta o elemento pra ocupar 100% do espaço como a largura mínima dele */
    height: auto; /* Ajusta o elemento automaticamente onde ele está inserido */
  }

  #inicio {
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  }

  #textos-introd {
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  }

  #praticas {
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
    flex-wrap: wrap; /* Permite que os itens de um elemento flexível quebrem para a próxima linha ou coluna, caso não caibam no espaço disponível */
  }

  #alimentacao {
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
    flex-wrap: wrap; /* Permite que os itens de um elemento flexível quebrem para a próxima linha ou coluna, caso não caibam no espaço disponível */
  }

  #habitos {
    flex-direction: column-reverse; /* Organiza os itens do container flexível em uma coluna invertida, alinhando-os verticalmente, mas com a ordem dos itens invertida.*/
  }

  #saudeMental {
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  }

  .container {
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
    flex-wrap: wrap; /* Permite que os itens de um elemento flexível quebrem para a próxima linha ou coluna, caso não caibam no espaço disponível */
  }

  #mitos {
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
  }
}

@media screen and (min-width: 481px) and (max-width: 768px) { /*Ajusta o conteúdo do site a partir da resolução de 481px até 768px */
  body {
    display: flex; /* Torna o layout flexível */
    flex-direction: column; /* Organiza os itens de um container flexível em uma coluna, alinhando-os verticalmente. */
    flex-wrap: wrap; /* Permite que os itens de um elemento flexível quebrem para a próxima linha ou coluna, caso não caibam no espaço disponível */
    font-size: medium; /* Muda o tamanho da fonte para médio */
  } 
}
